#include <SPI.h>
#include <MFRC522.h>
#include <SoftwareSerial.h>

// RFID Pins
#define SS_PIN 10
#define RST_PIN 9
MFRC522 rfid(SS_PIN, RST_PIN);

// HC-05 Bluetooth
SoftwareSerial btSerial(2, 3); // RX, TX

// Input/Output Pins
#define BUTTON_PIN 4
#define IN1 5
#define IN2 6

bool isLocked = true;

// List of valid RFID UIDs (uppercase, no spaces, no trailing space)
String validUIDs[] = {"237ACAFA", "63303EC5"};

void setup() {
  Serial.begin(9600);
  btSerial.begin(9600);

  SPI.begin();
  rfid.PCD_Init();

  pinMode(BUTTON_PIN, INPUT_PULLUP);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);

  lockCar(); // Start locked
  Serial.println("System ready. Waiting for input...");
}

void loop() {
  // Check Bluetooth input
  if (btSerial.available()) {
    String cmd = btSerial.readStringUntil('\n');
    cmd.trim();
    Serial.println("BT Command: " + cmd);

    if (cmd.equalsIgnoreCase("UNLOCK")) unlockCar();
    else if (cmd.equalsIgnoreCase("LOCK")) lockCar();
  }

  // Check Button press
  if (digitalRead(BUTTON_PIN) == LOW) {
    delay(200); // Debounce
    toggleLock();
  }

  // Check RFID card
  if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {
    String uid = "";
    for (byte i = 0; i < rfid.uid.size; i++) {
      if (rfid.uid.uidByte[i] < 0x10) uid += "0"; // Add leading zero
      uid += String(rfid.uid.uidByte[i], HEX);
    }
    uid.toUpperCase();
    Serial.println("RFID: " + uid);

    for (String validUID : validUIDs) {
      if (uid == validUID) {
        toggleLock();
        break;
      }
    }

    rfid.PICC_HaltA();
  }
}

// Function to unlock
void unlockCar() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  delay(1000); // Adjust as per motor
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  isLocked = false;
  Serial.println("Car Unlocked");
}

// Function to lock
void lockCar() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  delay(1000); // Adjust as per motor
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  isLocked = true;
  Serial.println("Car Locked");
}

// Toggle between lock/unlock
void toggleLock() {
  if (isLocked) unlockCar();
  else lockCar();
}
